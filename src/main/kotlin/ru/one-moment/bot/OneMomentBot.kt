package ru.`one-moment`.bot

import com.github.kotlintelegrambot.Bot
import ru.`one-moment`.bot.keyboards.Keyboards
import com.github.kotlintelegrambot.bot
import com.github.kotlintelegrambot.dispatch
import com.github.kotlintelegrambot.dispatcher.Dispatcher
import com.github.kotlintelegrambot.dispatcher.callbackQuery
import com.github.kotlintelegrambot.dispatcher.command
import com.github.kotlintelegrambot.entities.ChatId
import com.github.kotlintelegrambot.entities.ParseMode
import com.github.kotlintelegrambot.entities.TelegramFile
import com.github.kotlintelegrambot.logging.LogLevel
import ru.`one-moment`.bot.teachers.OneMomentTeachers
import ru.`one-moment`.bot.teachers.Roman
import java.io.File

private const val BOT_ANSWER_TIMEOUT = 30
private const val BOT_TOKEN = "6554932402:AAEYN8oYHnUmp4yWY5mnSFjkr7MnmkiVCqE"

class OneMomentBot {

    private var _chatId: ChatId? = null
    private val chatId by lazy { requireNotNull(_chatId) }

    private var messageId: Long? = null

    fun createBot(): Bot {
        return bot {
            timeout = BOT_ANSWER_TIMEOUT
            token = BOT_TOKEN
            logLevel = LogLevel.All()

            dispatch {
                setUpCommands()
                setUpCallbacks()
            }

        }
    }

    private fun Dispatcher.setUpCommands() {

        command("start") {
            _chatId = ChatId.fromId(message.chat.id)

            bot.sendMessage(
                chatId = chatId,
                text = "–ü—Ä–∏–≤–µ—Ç –∏ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üéâ"
            )

            Thread.sleep(500)

            bot.sendMessage(
                chatId = chatId,
                text = "–î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è",
                replyMarkup = Keyboards.login
            )
        }

        command("teachers") {
            _chatId = ChatId.fromId(message.chat.id)
            messageId = message.messageId

            val teacher = OneMomentTeachers.current()

            bot.sendPhoto(
                chatId = chatId,
                photo = TelegramFile.ByFile(File(teacher.photo)),
                caption = teacher.info,
                replyMarkup = teacher.keyboard,
                parseMode = ParseMode.MARKDOWN
            )
        }

        command("pay") {

        }

        command("help") {
            _chatId = ChatId.fromId(message.chat.id)
            messageId = message.messageId

            val helpText = """
                    *–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:*
                    /start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
                    /teachers - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É—á–∏—Ç–µ–ª–µ–π –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                    /login - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                    
                    *–î–æ—Å—Ç—É–ø–Ω–æ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:*
                    /schedule - –º–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                    /group - –º–æ—è –≥—Ä—É–ø–ø–∞
                    /trial - –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ
                    /pay - –æ–ø–ª–∞—Ç–∏—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç
                    
                    /help - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
                """.trimIndent()
            bot.sendMessage(
                chatId = ChatId.fromId(message.chat.id),
                text = helpText,
                parseMode = ParseMode.MARKDOWN,
            )
        }
    }

    private fun Dispatcher.setUpCallbacks() {
        callbackQuery(callbackData = "prevTeacher") {
            val teacher = OneMomentTeachers.previous()

            messageId = messageId?.plus(1)

            bot.deleteMessage(
                chatId = chatId,
                messageId = messageId!!
            )

            bot.sendPhoto(
                chatId = chatId,
                photo = TelegramFile.ByFile(File(teacher.photo)),
                caption = teacher.info,
                replyMarkup = teacher.keyboard,
                parseMode = ParseMode.MARKDOWN
            )
        }

        callbackQuery(callbackData = "nextTeacher") {
            val teacher = OneMomentTeachers.next()

            messageId = messageId?.plus(1)

            bot.deleteMessage(
                chatId = chatId,
                messageId = messageId!!
            )

            bot.sendPhoto(
                chatId = chatId,
                photo = TelegramFile.ByFile(File(teacher.photo)),
                caption = teacher.info,
                replyMarkup = teacher.keyboard,
                parseMode = ParseMode.MARKDOWN
            )
        }

        callbackQuery(callbackData = "romanPreview") {
            bot.sendVideo(
                chatId = chatId,
                video = TelegramFile.ByFile(File(Roman.video)),
            )
        }

        callbackQuery(callbackData = "junior") {

            messageId = messageId?.plus(1)

            bot.deleteMessage(
                chatId = chatId,
                messageId = messageId!!
            )

            bot.sendPhoto(
                chatId = chatId,
                photo = TelegramFile.ByFile(File(Roman.photo)),
                caption = Roman.schedule[0],
                replyMarkup = Roman.keyboard,
                parseMode = ParseMode.MARKDOWN
            )
        }

        callbackQuery(callbackData = "middle") {

            messageId = messageId?.plus(1)

            bot.deleteMessage(
                chatId = chatId,
                messageId = messageId!!
            )

            bot.sendPhoto(
                chatId = chatId,
                photo = TelegramFile.ByFile(File(Roman.photo)),
                caption = Roman.schedule[1],
                replyMarkup = Roman.keyboard,
                parseMode = ParseMode.MARKDOWN
            )
        }

    }
}